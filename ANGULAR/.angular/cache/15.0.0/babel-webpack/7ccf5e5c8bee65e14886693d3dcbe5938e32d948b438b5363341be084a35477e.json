{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Amin/Documents/Info/WD/CIN2/ProjetS4-V3/angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/user.service\";\nimport * as i2 from \"@angular/router\";\nexport class IsSignedInGuard {\n  constructor(userService, router) {\n    this.userService = userService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield lastValueFrom(_this.userService.isConnected());\n        return true;\n      } catch (err) {\n        return _this.router.createUrlTree(['']);\n      }\n      /*\r\n          return this.userService.isConnected().pipe(map(() => {\r\n            return true;\r\n          }),\r\n          catchError(() => {\r\n              return of(this.router.createUrlTree(['']));\r\n            })\r\n          );*/\n    })();\n  }\n  static #_ = this.ɵfac = function IsSignedInGuard_Factory(t) {\n    return new (t || IsSignedInGuard)(i0.ɵɵinject(i1.UserService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: IsSignedInGuard,\n    factory: IsSignedInGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";AACA,SAASA,sBAAsB,EAAeC,MAAM,EAAEC,mBAAmB,EAAEC,OAAO,QAAQ,iBAAiB;AAC3G,SAASC,aAAa,QAAoB,MAAM;;;;AAMhD,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEjEC,WAAW,CACfC,KAA6B,EAC7BC,KAA0B;IAAA;IAAA;MACxB,IAAI;QACF,MAAMP,aAAa,CAAC,KAAI,CAACG,WAAW,CAACK,WAAW,EAAE,CAAC;QACnD,OAAO,IAAI;OACV,CAAC,OAAOC,GAAG,EAAE;QACd,OAAO,KAAI,CAACL,MAAM,CAACM,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC;;MAI9C;;;;;;;;IAAA;EAUE;EAAC;qBAxBUT,eAAe;EAAA;EAAA;WAAfA,eAAe;IAAAU,SAAfV,eAAe;IAAAW,YAFd;EAAM","names":["ActivatedRouteSnapshot","Router","RouterStateSnapshot","UrlTree","lastValueFrom","IsSignedInGuard","constructor","userService","router","canActivate","route","state","isConnected","err","createUrlTree","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Amin\\Documents\\Info\\WD\\CIN2\\ProjetS4-V3\\angular\\src\\app\\is-signed-in-guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { lastValueFrom, Observable } from 'rxjs';\r\nimport { UserService } from './service/user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IsSignedInGuard implements CanActivate {\r\n  constructor(private userService: UserService, private router: Router) {}\r\n\r\n  async canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Promise<boolean | UrlTree>  {\r\n      try {\r\n        await lastValueFrom(this.userService.isConnected());\r\n        return true;\r\n        } catch (err) {\r\n        return this.router.createUrlTree(['']);\r\n        }\r\n\r\n        \r\n/*\r\n    return this.userService.isConnected().pipe(map(() => {\r\n      return true;\r\n    }),\r\n    catchError(() => {\r\n        return of(this.router.createUrlTree(['']));\r\n      })\r\n    );*/\r\n  \r\n  \r\n  }\r\n  \r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}